openapi: 3.0.0
info:
  title: StudentPals
  description: IGP Group 17 Internal API Documentation
  version: 0.0.1

servers:
  - url: https://xjsdyxh2gd.execute-api.eu-west-1.amazonaws.com/Prod/v1
    description: Students Service

paths:
  # ---------------- STUDENTS ----------------
  /students/{id}:
    get:
      summary: /students/basic/{id}
      description: Returns basic information on a specific student by Profile ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The UUID of the student.
          schema:
            type: string
            minimum: 1
      responses:
        '200':
          description: OK (A JSON schema for the student)
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/StudentBasic'
        '400':
          description: The specified Profile ID is invalid (not a number)
        '404':
          description: A user with the specified Profile ID was not found
        default:
          description: Unexpected error
  /students/{id}:
    get:
      summary: /students/detailed/{id}
      description: Returns detailed information on a specific user by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the student.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK (A JSON schema for the student)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDetailed'
        '400':
          description: The specified student ID is invalid (not a number)
        '404':
          description: A user with the specified ID was not found
        default:
          description: Unexpected error
  /students:
    post:
      summary: /students/
      description: Creates a new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudent'
      responses:
        '201':
          description: Student created
  /students/{id}:
    put:
      summary: /students/update/{id}
      description: Updates a student
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the student.
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDetailed'
      responses:
        '200':
          description: Student updated
  /students/delete/{id}:
    delete:
      summary: /students/delete/{id}
      description: Deletes a student
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the student.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Student updated

# ================================ SCHEMAS ================================
components:
  schemas:
      # ---------------- STUDENTS ----------------
    Student:
      properties:
        studentId:
          type: string
          example: "157cf319-f74d-4de4-8f80-09196ec06e7e"
        username:
          type: string
          example: "johnbernadis93"
        email:
          type: string
          example: "johnbernadis93@gmail.com"
        realname:
          type: string
          example: "John Bernadis"
        age:
          type: integer
          format: int64
          example: 27
        gender:
          type: string
          example: "Male"
        universityName:
          type: string
          example: "University of Bath"
        universityEmail:
          type: string
          example: "jbb93@bath.ac.uk"
        year:
          type: integer
          format: int64
          example: 2
        course:
          type: string
          example: "Computer Science (BSc) Hons"
