openapi: 3.0.0
info:
  title: StudentPals
  description: IGP Group 17 Internal API Documentation
  version: 0.0.1

servers:
  - url: https://xjsdyxh2gd.execute-api.eu-west-1.amazonaws.com/Prod/v1
    description: Students Service
  - url: https://www.google.co.uk
    description: Organisers Service

paths:
  # ---------------- STUDENTS ----------------
  /students/basic/{id}:
    get:
      summary: /students/basic/{id}
      description: Returns basic information on a specific student by Profile ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the student.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK (A JSON schema for the student)
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/StudentBasic'
        '400':
          description: The specified Profile ID is invalid (not a number)
        '404':
          description: A user with the specified Profile ID was not found
        default:
          description: Unexpected error
  /students/uni/{id}:
    get:
      summary: /students/uni/{id}
      description: Returns university information on a specific user by Profile ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the student.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK (A JSON schema for the student)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentUni'
        '400':
          description: The specified student ID is invalid (not a number)
        '404':
          description: A user with the specified ID was not found
        default:
          description: Unexpected error
  /students/detailed/{id}:
    get:
      summary: /students/detailed/{id}
      description: Returns detailed information on a specific user by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the student.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK (A JSON schema for the student)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentDetailed'
        '400':
          description: The specified student ID is invalid (not a number)
        '404':
          description: A user with the specified ID was not found
        default:
          description: Unexpected error
  /students/create:
    post:
      summary: /students/create
      description: Creates a new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudent'
      responses:
        '201':
          description: Student created
  /students/update/{id}:
    post:
      summary: /students/update/{id}
      description: Updates a student
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the student.
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentDetailed'
      responses:
        '200':
          description: Student updated
  /students/delete/{id}:
    delete:
      summary: /students/delete/{id}
      description: Deletes a student
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the student.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Student updated

  # ---------------- ORGANISERS ----------------
  /organisers/basic/{id}:
    get:
      summary: /organisers/basic/{id}
      description: Returns basic information on a specific organiser by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the organiser.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK (A JSON schema for the student)
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/OrganiserBasic'
        '400':
          description: The specified student ID is invalid (not a number)
        '404':
          description: A user with the specified ID was not found
        default:
          description: Unexpected error
  /organisers/events/{id}:
    get:
      summary: /organisers/events/{id}
      description: Returns events on a specific organiser by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the organiser.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK (A JSON schema for the student)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganiserEvents'
        '400':
          description: The specified student ID is invalid (not a number)
        '404':
          description: A user with the specified ID was not found
        default:
          description: Unexpected error
  /organisers/detailed/{id}:
    get:
      summary: /organisers/detailed/{id}
      description: Returns detailed information on a specific organiser by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the student.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK (A JSON schema for the student)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganiserDetailed'
        '400':
          description: The specified organiser ID is invalid (not a number)
        '404':
          description: A user with the specified ID was not found
        default:
          description: Unexpected error
  /organisers/create:
    post:
      summary: /organisers/create
      description: Creates a new organiser.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganiser'
      responses:
        '201':
          description: Student created
  /organisers/update/{id}:
    post:
      summary: /organisers/update/{id}
      description: Updates a student
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the organiser.
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganiserDetailed'
      responses:
        '200':
          description: Student updated
  /organisers/delete/{id}:
    delete:
      summary: /organisers/delete/{id}
      description: Deletes a student
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the student.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Organiser updated

# ================================ SCHEMAS ================================
components:
  schemas:
      # ---------------- STUDENTS ----------------
    StudentBasic:
      properties:
        username:
          type: string
          example: "johnbernadis93"
        realname:
          type: string
          example: "John Bernadis"
        age:
          type: integer
          format: int64
          example: 27
        gender:
          type: string
          example: "Male"
    StudentUni:
      properties:
        email:
          type: string
          example: "johnbernadis93@gmail.com"
        university:
          type: string
          example: "University of Bath"
        year:
          type: integer
          format: int64
          example: 2
        course:
          type: string
          example: "Computer Science (BSc) Hons"

      StudentDetailed:
        type: object
        properties:
          basic:
            $ref: '#/components/schemas/StudentBasic'
          uni:
            $ref: '#/components/schemas/StudentUni'

      CreateStudent:
        type: object
        allOf:
          - $ref: '#/components/schemas/StudentDetailed'
        required:
          - username
          - realname
          - age
          - email
          - university
          - year
          - course

      # ---------------- ORGANISERS ----------------
    CreateOrganiser:
      type: object
      allOf:
        - $ref: '#/components/schemas/OrganiserDetailed'
      required:
        - username
        - realname
        - age
        - email
        - university
        - year
        - course
        
    OrganiserDetailed:
      type: object
      allOf:
        - $ref: '#/components/schemas/OrganiserBasic'
        - $ref: '/components/schemas/OrganiserEvents'

    OrganiserBasic:
      properties:
        username:
          type: string
          example: "johnbernadis93"
        realname:
          type: string
          example: "John Bernadis"
        age:
          type: integer
          format: int64
          example: 27

    OrganiserEvents:
      properties:
        email:
          type: string
          example: "johnbernadis93@gmail.com"
        university:
          type: string
          example: "University of Bath"
        year:
          type: integer
          format: int64
          example: 2
        course:
          type: string
          example: "Computer Science (BSc) Hons"
